---
- name: Create a server instance
  os_server:
    cloud: ospcloud
    name: "{{ instance_provision.instance_name }}"
    image: rhel-guest
    meta: "group={{ instance_provision.group }},deployment_name={{ instance_provision.deployment }}"
    flavor: m2.small
    security_groups: "{{ instance_provision.security_group_name }}"
    key_name: ansible_ssh
    wait: yes
    nics:
    - net-name: int_network
    userdata: |
      #!/bin/bash
      curl -o /tmp/openstack.pub http://www.opentlc.com/download/ansible_bootcamp/openstack_keys/openstack.pub
      cat /tmp/openstack.pub >> /home/cloud-user/.ssh/authorized_keys
      curl -o /tmp/internal.repo http://www.opentlc.com/download/ansible_bootcamp/repo/internal.repo
      cp /tmp/internal.repo /etc/yum.repos.d/internal.repo
  register: instanceip
  loop: "{{ instance_details }}"
  loop_control:
    loop_var: "instance_provision"
  async: 900
  poll: 0

- name: Check for instance completion
  async_status:
    jid: "{{ async_result_item.ansible_job_id }}"
  loop: "{{ instanceip.results }}"
  loop_control:
    loop_var: "async_result_item"
  register: async_poll_results
  until: async_poll_results.finished
  retries: 30

- debug:
    var: instanceip
    verbosity: 2
  
- name: Add floating IP to instances
  os_floating_ip:
    cloud: ospcloud
    state: present
    reuse: yes
    server: "{{ item.instance_provision.instance_name }}"
    network: ext_network
    wait: true
    timeout: 180
  register: instancefloatingip
  loop: "{{ instanceip.results }}"

# - name: Show "{{ instanceip }}" public IP
#   debug: var=instancefloatingip.floating_ip.floating_ip_address


- name: Wait for instances to be available
  wait_for:
    host: "{{ item.floating_ip.floating_ip_address }}"
    port: 22
    search_regex: OpenSSH
    timeout: 600
  delegate_to: "{{ inventory_hostname }}"
  async: 900
  poll: 0
  register: wait_for_instance
  loop: "{{ instancefloatingip.results }}"
...
